@import url('https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@700&display=swap');
* {
        margin: 0;
        padding: 0;
        font-family: 'Roboto Condensed', sans-serif;
    /* al ancho del elemento le resta padding, margin, etc */
        box-sizing: border-box;
    /* que no haga scroll horizontal */
        overflow-x: hidden;
    }

html {
        font-size: 72.5%;
    }    

header,
nav,
main,
aside,
footer {
        padding: 20px;
        color: white;
        font-weight: 800;
        

    }
                                                                        
header {
        background-color: lightblue;
        grid-area: header;
        display:flex;
        }
                                                                        
nav {
        background-color: grey;
        grid-area: nav;
        padding: 6px 30px;
        width: 100%;
        /* box-sizing: border-box;
        display: flex;
        justify-content: space-between;
        align-items:stretch;  */
    }
                                                                        
main {
        background-color: grey;
        grid-area: main;
    }
                                                                        
aside {
        background-color: lightblue;
        grid-area: aside;
        }
                                                                        
footer {
        background-color: lightgreen;
        grid-area: footer;
        
        }
                                                                        
body {
        display: grid;
        grid-template-columns: 2fr;
        /* fraction divide tu contenedor en fracciones
        aparece para grid */
        grid-template-rows: 20vh 20vh 30vh 25vh 5vh;
        /* nav-main-aside-footer */
        /* para usar auto tienen que tener contenido los container */
        grid-template-areas: "header" "nav" "main" "aside" "footer";
        }
img{
        width: 50px;
        height: 50px;
}

aside{
        display: flex;
        align-content: space-between;
        align-items: center;
        justify-content: space-between;
        flex-direction: column;
}

.botoneraColor{
        background-color: rgba(238, 188, 247, .5);
		/*position*/
	position: sticky;
	top: 0;
		/*padding*/
	padding: 10px 30px;
		/****display flex****/
	display: flex;
	justify-content: space-between;
	align-items: center;
        border-radius: 5px;
}
.botoneraColor ol{
        /****display flex****/
        display: flex;
        border-radius: 2em;
        
        
}

        .botoneraColor ol li{
                list-style: none;
                margin-right: 20px;
                align-items:center;
                justify-content: space-between;
        }

                .botoneraColor ol li a{
                        font-size: 1.8rem;
                        text-decoration: none;
                        color: #5B5959;
                        
                        
                
                }

                        /*hover*/
                        .botoneraColor ol li a:hover{
                                color: blue;
                                font-weight: 600;
                                
                        }


.logoAside{
        width: 150px;
        height: 150px;
}

.logoLog{
        width: 220px;
        height: 150px;
}

.videoInstitucional{
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
        align-content: space-between;
        margin-left: 150px;
        overflow: auto;
}

.gradiente{
        background-image: linear-gradient(blue, gold);
        width: 10rem;
        height: 7rem;
        margin-left: 34rem;
        border-radius: 5px;
        flex-direction: row-reverse;
        
}

.rotateAlpha {
        background-color: blue;
        cursor: pointer;
        width: 15rem;
        height: 7rem;
        margin-left: 4rem;
        margin-right: 4rem;
        border-radius: 5px;
        flex-direction: row;


}

.rotateAlpha:hover {
        transform: rotate(360deg);
        background-color: blue;
        transition: transform 4s;
        cursor: pointer;
        width: 15rem;
        height: 7rem;
        margin-left: 2rem;
        margin-right: 4rem;
        border-radius: 5px;
}


@keyframes animateDiv {
        /* pensarlo como una línea de tiempo */
        /* animateDiv es el nombre que le asigno a la línea de tiempo
            dos formas de trabajar la línea de tiempo, a través de porcentaje */
        0% {
            width: 100px
        }
        25% {
            width: 200px
        }
        50% {
            width: 300px
        }
        75% {
            width: 200px;
            background-color: green;
        }
        100% {
            width: 200px;
            background-color: greenyellow;
        }
    }
    
.animate {
        animation-name: animateDiv;
        /* animateDiv es un nombre que le puse aleatorio */
        animation-iteration-count: infinite;
        /* cuantas veces quiero que se repita, se pone el número */
        animation-timing-function: ease-in;
        /* como empieza y termina la animación */
        /* https://www.w3schools.com/cssref/tryit.asp?filename=trycss3_animation-timing-function2 */
        animation-duration: 10s;
        /* cuanto quiero que dure, se expresa en segundos */
        animation-delay: 0s;
        /* pedir un delay , el tiempo en que tarda en correr la animación*/
    }



@media only screen and (min-width: 280px) {
/* solamente al dispositivo que es una pantalla y que mida como mínimo de 768
hacé lo siguiente */
body {
        /* no lo pongo display:grid porque hereda de mobile first */
        /* ahora quiero tres columnas iguales */
        grid-template-columns: repeat(3, 1fr);
        grid-template-rows: 20vh 20vh 30vh 25vh 5vh;
        grid-template-areas: "header header header" "nav nav nav" "main main main" "aside . ." "footer footer footer";
        /* si pones . o none dejas vacía */
        }
    }
@media only screen and (min-width: 768px) {
/* solamente al dispositivo que es una pantalla y que mida como mínimo de 768
hacé lo siguiente */
body {
/* no lo pongo display:grid porque hereda de mobile first */
/* ahora quiero tres columnas iguales */
        grid-template-columns: repeat(3, 1fr);
        grid-template-rows: 20vh 20vh 30vh 25vh 5vh;
        grid-template-areas: "header header header" "nav nav nav" "main main aside" "footer footer footer";
        /* si pones . o none dejas vacía */
        }
        }
@media only screen and (min-width: 1024px) {
/* hereda del breakpoint anterior tmb */
body {
        grid-template-columns: 5vw 70vw 25vw;
        grid-template-rows: 20vh 20vh 30vh 25vh 5vh;
        /* rows: podría no decirlo porque hereda */
        grid-template-areas: "header header header" "nav nav nav" "main main aside" "footer footer footer";
        grid-column-gap: 5px;
        /* espacio entre columnas */
        }
        }
@media only screen and (min-width: 1200px) {
/* hereda del breakpoint anterior tmb */
body {
        grid-template-columns: 5vw 70vw 25vw;
        grid-template-rows: 20vh 10vh 65vh 5vh;
/* rows: podría no decirlo porque hereda */
        grid-template-areas: "header header header" "nav nav nav" "main main aside" "footer footer footer";
        grid-column-gap: 0px;
/* espacio entre columnas */
        }
        }